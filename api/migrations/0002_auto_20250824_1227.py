# Generated by Django 5.0.2 on 2024-02-28 12:00

from django.db import migrations
import csv
import os

def create_doctor_data_from_csv(apps, schema_editor):
    """
    Populates the database from doctors.csv, ensuring old data is cleared
    and new data is loaded from the clean CSV.
    """
    Doctor = apps.get_model('api', 'Doctor')
    
    # --- THIS IS THE CRITICAL NEW STEP ---
    # Delete all existing doctor records to ensure a clean slate.
    Doctor.objects.all().delete()
    print("\nCleared all old doctor data.")
    # ------------------------------------

    file_path = os.path.join(
        os.path.dirname(os.path.dirname(os.path.dirname(__file__))), 
        'doctors.csv' # This is your new, clean file
    )

    try:
        with open(file_path, 'r', encoding='utf-8') as csvfile:
            reader = csv.DictReader(csvfile)
            doctors_to_create = []
            existing_emails = set()
            
            for row in reader:
                # *** CORRECTED COLUMN NAMES TO MATCH 'doctors_clean.csv' ***
                name = row.get('Name', '').strip() 
                specialization = row.get('Specialization', '').strip()
                
                if name and specialization:
                    email_name = name.lower().replace(' ', '.').replace('Dr.', '').replace('dr.', '')
                    email = f"{email_name}@example.com"

                    if email not in existing_emails:
                        doctors_to_create.append(
                            Doctor(name=name, specialization=specialization, email=email)
                        )
                        existing_emails.add(email)

            if doctors_to_create:
                Doctor.objects.bulk_create(doctors_to_create)
                print(f"Successfully added {len(doctors_to_create)} new doctors from the clean dataset.")

    except FileNotFoundError:
        print(f"\nCould not find the doctors.csv file.")
    except Exception as e:
        print(f"\nAn error occurred: {e}")


class Migration(migrations.Migration):

    dependencies = [
        ('api', '0001_initial'),
    ]

    operations = [
        migrations.RunPython(create_doctor_data_from_csv),
    ]
